"""Generate Markov text from text files."""

from random import choice


def open_and_read_file(file_path):
    """Take file path as string; return text as string.

    Takes a string that is a file path, opens the file, and turns
    the file's contents as one string of text.
    """

    # Open green-eggs.txt, read through str generated by read() and assign to variable.
    contents = open(file_path).read()

    return contents

# print(open_and_read_file('green-eggs.txt'))


def make_chains(text_string):
    """Take input text as string; return dictionary of Markov chains.

    A chain will be a key that consists of a tuple of (word1, word2)
    and the value would be a list of the word(s) that follow those two
    words in the input text.

    For example:

        >>> chains = make_chains('hi there mary hi there juanita')

    Each bigram (except the last) will be a key in chains:

        >>> sorted(chains.keys())
        [('hi', 'there'), ('mary', 'hi'), ('there', 'mary')]

    Each item in chains is a list of all possible following words:

        >>> chains[('hi', 'there')]
        ['mary', 'juanita']

        >>> chains[('there','juanita')]
        [None]
    """

    chains = {}

    # Split words by white space
    words = text_string.split()
    for i in range(len(words) - 2):
        bigram = words[i], words[i+1]

        if bigram not in chains.keys():
            chains[bigram] = []
        chains[bigram].append(words[i+2])

    return chains


# GOAL:
make_text(make_chains(open_and_read_file('green-eggs.txt')))


def make_text(chains):
    """Return text from chains.
    Input two word string, finds key with 2 words, chooses random 3rd work and
    continues the process until it breaks.
    input "would you"
    >> > "could you in with in a house?"
        """

    make_chains(open_and_read_file('green-eggs.txt'))
    chains.split()
    words = []

    # Use FOR loop to select index 1 from dictionary key
    for idx, word in chains:
        words.append(word[idx])
    # Use RANDOM() to select word from key's value list

    # Append index 1 and random value word to words list
    new_key = (, random(chains.keys()))

    return ' '.join(words)


input_path = 'green-eggs.txt'

# Open the file and turn it into one long string
input_text = open_and_read_file(input_path)

# Get a Markov chain
chains = make_chains(input_text)

# Produce random text
random_text = make_text(chains)

print(chains)
